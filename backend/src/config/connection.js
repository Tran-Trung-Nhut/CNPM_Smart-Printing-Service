const { closeDB, connectDB } = require("./config.js");
const fs = require("fs");

const sqlScriptPath = "./src/config/db.sql";

async function waitForMysql(pool) {
  let isConnected = false;
  while (!isConnected) {
    try {
      await pool.query("SELECT 1"); // Th·ª±c hi·ªán m·ªôt truy v·∫•n ƒë∆°n gi·∫£n ƒë·ªÉ ki·ªÉm tra k·∫øt n·ªëi
      isConnected = true;
      console.log("MySQL is ready üéâ");
    } catch (error) {
      console.error("üíÄ MySQL is not ready yet, retrying...");
      await new Promise(resolve => setTimeout(resolve, 2000)); // Ch·ªù 2 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i
    }
  }
}

async function executeSqlScript() {
  try {
    const sqlScript = fs.readFileSync(sqlScriptPath, "utf8");
    const commands = sqlScript.split(/;\s*$/m); // Ph√¢n t√°ch theo d·∫•u ;
    console.log(commands);

    const pool = await connectDB();
    await waitForMysql(pool);
    // Remove last empty command if it exists
    if (commands[commands.length - 1].trim() === "") {
      commands.pop();
    }

    for (let i = 0; i < commands.length; i++) {
      await pool.query(commands[i]);
    }
    console.log("Database setup completed üöÄ");
  } catch (error) {
    console.error("üíÄ Error executing SQL script:", error);
  } /*finally {
    await closeDB();
    console.log("Connection pool closed üö™");
  }*/
}

executeSqlScript();